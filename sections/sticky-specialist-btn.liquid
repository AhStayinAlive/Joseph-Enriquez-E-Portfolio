<!-- Enhanced Sticky Talk to Specialist Button -->
<div class="broen-sticky-btn" id="stickyBtn">
  <button type="button" class="broen-btn-specialist">
    <span class="btn-text">Talk to a Specialist</span>
    <svg class="btn-icon" width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
  </button>
</div>

<style>
.broen-sticky-btn {
  position: fixed;
  top: calc(var(--hdr, 72px) + 12px);   /* sit just below the sticky header */
  right: 16px;
  bottom: auto;
  z-index: 9998;                        /* keep under header if header uses 9999/10000 */
  transition: transform .2s ease, opacity .2s ease;
}
@media (max-width: 520px) {
  .broen-sticky-btn { right: 10px; }
  .broen-btn-specialist { padding: 10px 16px; font-size: 14px; }
}
.broen-btn-specialist {
  background: #000000;
  color: #ffffff;
  border: 2px solid #ffffff;
  border-radius: 50px;
  padding: 14px 28px;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
  font-size: 15px;
  font-weight: 600;
  cursor: pointer;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15), 0 4px 8px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: center;
  gap: 8px;
  backdrop-filter: blur(10px);
  border: 2px solid rgba(255, 255, 255, 0.3);
}

.broen-btn-specialist::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  transition: left 0.5s;
}

.broen-btn-specialist:hover::before {
  left: 100%;
}

.broen-btn-specialist:hover {
  background: #ffffff;
  color: #000000;
  border-color: rgba(0, 0, 0, 0.1);
  transform: translateY(-3px);
  box-shadow: 0 12px 32px rgba(0, 0, 0, 0.2), 0 8px 16px rgba(0, 0, 0, 0.1);
}

.btn-text {
  white-space: nowrap;
  font-weight: 600;
}

.btn-icon {
  transition: transform 0.3s ease;
  flex-shrink: 0;
}

.broen-btn-specialist:hover .btn-icon {
  transform: scale(1.1) rotate(5deg);
}

.broen-btn-specialist:active {
  transform: translateY(-1px);
  transition: transform 0.1s ease;
}

/* Pulse animation */
.broen-btn-specialist::after {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50px;
  animation: pulse 3s infinite;
  z-index: -1;
}

@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.05);
    opacity: 0.4;
  }
  100% {
    transform: scale(1);
    opacity: 0.8;
  }
}

/* Mobile */
@media (max-width: 768px) {
  .broen-sticky-btn {
    bottom: 15px;
    right: 15px;
  }
  
  .broen-btn-specialist {
    padding: 12px 22px;
    font-size: 14px;
    gap: 6px;
  }
  
  .btn-icon {
    width: 16px;
    height: 16px;
  }
}

/* Ripple animation */
@keyframes ripple {
  to {
    transform: scale(2);
    opacity: 0;
  }
}
</style>

<script>
// Enhanced button interactions

document.addEventListener('DOMContentLoaded', () => {
  const setHdr = () => {
    const header = document.querySelector('header, .shopify-section-header, .header-wrapper');
    const h = header ? header.offsetHeight : 72;
    document.documentElement.style.setProperty('--hdr', h + 'px');
  };
  setHdr();
  window.addEventListener('resize', setHdr);
  // Recompute if theme changes header size on scroll
  document.addEventListener('shopify:section:load', setHdr);
  document.addEventListener('shopify:section:reorder', setHdr);
});

document.addEventListener('DOMContentLoaded', function() {
  const btn = document.querySelector('.broen-btn-specialist');
  
  // Add click ripple effect
  btn.addEventListener('click', function(e) {
    const ripple = document.createElement('span');
    const rect = btn.getBoundingClientRect();
    const size = Math.max(rect.width, rect.height);
    const x = e.clientX - rect.left - size / 2;
    const y = e.clientY - rect.top - size / 2;
    
    ripple.style.cssText = `
      position: absolute;
      width: ${size}px;
      height: ${size}px;
      left: ${x}px;
      top: ${y}px;
      background: rgba(255, 255, 255, 0.4);
      border-radius: 50%;
      transform: scale(0);
      animation: ripple 0.6s ease-out;
      pointer-events: none;
      z-index: 1;
    `;
    
    btn.appendChild(ripple);
    
    setTimeout(() => ripple.remove(), 600);
  });
  
  // Add subtle floating animation
  let floatDirection = 1;
  setInterval(() => {
    if (!btn.matches(':hover')) {
      btn.style.transform = `translateY(${floatDirection * 1}px)`;
      floatDirection *= -1;
    }
  }, 2000);
  
  // Reset transform on hover
  btn.addEventListener('mouseenter', () => {
    btn.style.transform = 'translateY(-3px)';
  });
  
  btn.addEventListener('mouseleave', () => {
    btn.style.transform = 'translateY(0)';
  });
});
</script>